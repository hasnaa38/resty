{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","components/history/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","Form","props","handleApiCall","useState","method","setMethod","handleClick","e","document","getElementById","style","background","target","onSubmit","preventDefault","body","value","formData","url","className","name","type","onClick","id","rows","cols","JSONPrettyMon","require","Results","data","goFlag","resultFlag","class","theme","History","history","showResult","setShowResult","handleResult","map","element","requestParams","initialState","reducerFunction","state","action","payload","App","setGoFlag","setResultFlag","useReducer","dispatch","useEffect","responseFunction","a","newResponse","newCount","config","baseURL","axios","then","response","headers","length","count","results","obj","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.23258ffa.chunk.js","sourcesContent":["// import { render } from 'node-sass';\nimport React from 'react';\nimport './header.scss';\n\nexport default function Header() {\n  return (\n    <header>\n      <h1>RESTy</h1>\n\n      {/* <ul>\n        <li><a  href='./'>Home</a></li>\n        <li><a  href='./history'>History</a></li>\n      </ul> */}\n    </header>\n  )\n}\n","import React from 'react';\nimport './footer.scss';\n\nexport default function Footer(){\n  return(\n    <footer>&copy; 2021</footer>\n  )\n}","import React, { useState } from 'react';\nimport { useEffect } from 'react/cjs/react.development';\nimport './form.scss';\n\nexport default function Form(props) {\n  let {handleApiCall} = props;\n  let [method, setMethod] = useState('GET');\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    let body = 'no body'\n    if(method === 'POST' || method === 'PUT'){\n      body = e.target.body.value;\n    }\n    let formData = {\n      method: method,\n      url: e.target.url.value,\n      body: body\n    };\n    handleApiCall(formData);\n  }\n\n  let handleClick=(e)=>{\n    document.getElementById(method).style.background = '#7a4949';\n    e.target.style.background = '#395e64';\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label className='inputLabel'>\n          <span data-testid='URL'>URL: </span>\n          <input data-testid='URLinput' name='url' type='text' />\n          <button  data-testid='goButton' type='submit'>GO!</button>\n        </label>\n        <label className='methods'>\n          <span onClick={(e)=>{setMethod('GET'); handleClick(e)}} id='GET'>GET</span>\n          <span onClick={(e)=>{setMethod('POST'); handleClick(e)}} id='POST'>POST</span>\n          <span onClick={(e)=>{setMethod('PUT'); handleClick(e)}} id='PUT'>PUT</span>\n          <span onClick={(e)=>{setMethod('DELETE'); handleClick(e)}} id='DELETE'>DELETE</span>\n        </label>\n          {(method === 'POST' || method === 'PUT') && <textarea name='body' type='text' rows='4' cols='50'>JSON body</textarea>}\n      </form>\n    </>\n  )\n}","import React from 'react';\nimport './results.scss';\nimport JSONPretty from 'react-json-pretty';\nlet JSONPrettyMon = require('react-json-pretty/dist/acai');\n\nexport default function Results(props){\n  let {data, goFlag, resultFlag} = props;\n  return(\n    <section data-testid='result' id=\"results\">\n      {goFlag && <div class=\"dots-4\"></div>}\n      {resultFlag && <JSONPretty id=\"json-pretty\" data={data} theme={JSONPrettyMon}></JSONPretty>}\n      {/* {resultFlag && <pre data-testid='submit-result' >{data? JSON.stringify(data, undefined, 2) : null}</pre>} */}\n      <br/><br/>\n    </section>\n  );\n}","'use strict';\nimport React, { useState } from 'react';\nimport JSONPretty from 'react-json-pretty';\nlet JSONPrettyMon = require('react-json-pretty/dist/acai');\n\nfunction History(props) {\n    let { history } = props;\n    let[showResult, setShowResult] = useState(false);\n\n    let handleResult = () => {\n        setShowResult(true);\n    }\n\n    return (\n        <>\n            <div>History Tab</div>\n            {history ? history.map(element => {\n                return (\n                    <div>\n                        <button onClick={handleResult}><p>{element.requestParams.method}</p></button>\n                        <p>{element.requestParams.url}</p>\n                        <p>{element.requestParams.body}</p>\n                        {showResult && <JSONPretty id=\"json-pretty\" data={element.data} theme={JSONPrettyMon}></JSONPretty>}\n                    </div>\n                )\n            }) : null}\n        </>\n    )\n}\nexport default History;","import React, { useState, useEffect, useReducer } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.scss';\nimport Header from './components/header/index';\nimport Footer from './components/footer/index';\nimport Form from './components/form/index';\nimport Results from './components/results/index';\nimport History from './components/history/index';\n\nlet initialState = {\n  data: {},\n  requestParams: {},\n  history: []\n  // goFlag: false,\n  // resultFlag: false\n}\n\nlet reducerFunction = (state, action) => {\n  switch (action.type) {\n    case 'setParamsAction':\n      return { ...state, requestParams: action.payload };\n    case 'setDataAction':\n      return { ...state, data: action.payload };\n    case 'setHistoryAction':\n      // return {...state, history: newArray(state.history, action.payload)};\n      return { ...state, history: [action.payload, ...state.history] };\n    default:\n      return state;\n  }\n}\n\n// let newArray = (history, payload) => {\n//   return [payload, ...history];\n// }\n\nexport default function App() {\n  let [goFlag, setGoFlag] = useState(false);\n  let [resultFlag, setResultFlag] = useState(false);\n  let [state, dispatch] = useReducer(reducerFunction, initialState);\n\n  useEffect(() => {\n    let responseFunction = async () => {\n      setResultFlag(false);\n      setGoFlag(state.requestParams.url); // when its empty it undefined: false, when it has a value=go clicked: true\n      let newResponse = {};\n      let newCount = 0;\n      let config = {\n        method: `${state.requestParams.method}`,\n        baseURL: `${state.requestParams.url}`,\n        body: `${state.requestParams.body}`\n      }\n      await axios(config).then(response => {\n        setGoFlag(false);\n        setResultFlag(true);\n        newResponse = {\n          headers: response.headers,\n          body: response.data\n        };\n        newCount = newResponse.body.length;\n      })\n      // mock output\n      const data = {\n        count: newCount,\n        results: newResponse,\n      };\n      await dispatch({ type: 'setDataAction', payload: data });\n      let obj = {\n        requestParams: state.requestParams,\n        data: data\n      };\n      dispatch({ type: 'setHistoryAction', payload: obj });\n\n    }\n    responseFunction();\n  }, [state.requestParams], [state.data]);\n\n  let callApi = (requestParams) => {\n    // setRequestParams(requestParams);\n    dispatch({ type: 'setParamsAction', payload: requestParams });\n  }\n\n  return (\n    <React.Fragment>\n      {/* <Router> */}\n        {/* <Switch>\n          <Route exact path=\"/\">\n          </Route>\n          <Route path=\"/history\">\n          </Route>\n        </Switch> */}\n        <Header />\n            <Form handleApiCall={callApi} />\n            {(goFlag || resultFlag) && <div data-testid='method' className='textDev'>Request Method: {state.requestParams.method}</div>}\n            {(goFlag || resultFlag) && <div className='textDev'>URL: {state.requestParams.url}</div>}\n            {(goFlag || resultFlag) && <div className='textDev'>Body: {state.requestParams.body}</div>}\n            <Results data={state.data} resultFlag={resultFlag} goFlag={goFlag} />\n            <History history={state.history} />\n        <Footer />\n      {/* </Router> */}\n\n    </React.Fragment >\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}